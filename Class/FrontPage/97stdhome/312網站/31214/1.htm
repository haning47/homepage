<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=big5">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>新網頁1</title>
<script language="JavaScript" fptype="dynamicoutline">
<!--
function dynOutline() {}
//-->
</script>
<script language="JavaScript1.2" fptype="dynamicoutline" src="outline.js">
</script>
<script language="JavaScript1.2" fptype="dynamicoutline" for="document" event="onreadystatechange()">
<!--
initOutline()
//-->
</script>
</head>

<body background="images/back1.gif" onclick="dynOutline()">

<p align="center"><a name="Top"></a><img border="0" src="images/title1.gif" width="492" height="63"></p>

<table border="0" width="100%">
  <tr>
    <td width="29%"></td>
    <td width="71%">
      <!--msimagelist--><table dynamicoutline initcollapsed border="0" cellpadding="0" cellspacing="0" width="100%">
        <!--msimagelist--><tr>
          <!--msimagelist--><td valign="baseline" width="42"><img src="item1.gif" width="15" height="15" hspace="13"></td>
          <td valign="top" width="100%">程式語言的演進史
            <!--msimagelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
              <!--msimagelist--><tr>
                <!--msimagelist--><td valign="baseline" width="42"><img src="item2.gif" width="12" height="12" hspace="15"></td>
                <td valign="top" width="100%"><a href="#第一代程式語言">第一代程式語言</a><!--msimagelist--></td>
              </tr>
              <!--msimagelist--><tr>
                <!--msimagelist--><td valign="baseline" width="42"><img src="item2.gif" width="12" height="12" hspace="15"></td>
                <td valign="top" width="100%"><a href="#第二代程式語言">第二代程式語言</a><!--msimagelist--></td>
              </tr>
              <!--msimagelist--><tr>
                <!--msimagelist--><td valign="baseline" width="42"><img src="item2.gif" width="12" height="12" hspace="15"></td>
                <td valign="top" width="100%"><a href="#第三代程式語言">第三代程式語言&nbsp;</a><!--msimagelist--></td>
              </tr>
            <!--msimagelist--></table>
          <!--msimagelist--></td>
        </tr>
      <!--msimagelist--></table>
    </td>
  </tr>
</table>
<table border="1" width="100%">
  <tr>
    <td width="100%" colspan="2" bgcolor="#3399FF">
      <p align="center"><a name="第一代程式語言">第一代程式語言</a></td>
  </tr>
  <tr>
    <td width="50%">&nbsp;&nbsp;&nbsp;&nbsp; 第一代程式語言，簡單來說就是機器語言與組合語言 (Assembly Language) 。&nbsp;<br>  
      &nbsp;&nbsp;&nbsp;
      <p>「機器語言」為一連串的 0 與 1 ，在不同的排列組合下，可以命令 CPU 執行不同的動作。&nbsp;<br>  
      &nbsp;&nbsp;&nbsp;</p>
      <p>「組合語言」就是用助憶碼來代表複雜的機器指令，使人們可以用文字表示這些複雜的 0 與 1 之指令。組合語言比機器語言的抽象化程度稍高，至少人們較易讀的懂。&nbsp;<br>  
      <br>
      &nbsp;&nbsp;&nbsp; ※曾有一些日本的硬體廠商，為了製造第五代電腦，創造出以 CPU 能直接讀的懂 LISP 的 Symbolic 的機器，雖然後來並未成功，但開啟 CPU 提供高階語言能力的趨勢。&nbsp;</p>  
      <p align="right"><a href="#Top">Top</a></p>
      <p>　</td>
    <td width="50%"><img border="0" src="htmphoto/電腦.jpg" width="296" height="227"></td>
  </tr>
  <tr>
    <td width="100%" colspan="2" bgcolor="#33CCFF">
      <p align="center"><a name="第二代程式語言">第二代程式語言</a></td>
  </tr>
  <tr>
    <td width="50%">&nbsp;&nbsp;&nbsp;&nbsp; 如 FORTRAN 、 COBOL 、 BASIC ，這些語言的知名度與接受度都相當高，在不久的將來相信也不會一下子消失，許多人第一次學語言便是從這開始。  
      <p>&nbsp;&nbsp;&nbsp;&nbsp; 同時，這些語言的穩定性與大量已存在的程式碼是這些語言仍然能流傳的重要因素。所以，許多有心人士便將這些語言予以「進化」，如FORTRAN 由 77 變成 FORTRAN-90 增強了平行處理的能力； COBOL 變成 COBOL-97 ，具有物件導向的功能； BASIC 演變成微軟公司極成功的產品── Visual Basic ，同樣也是具有物件導向的功能等等。&nbsp;</p>  
      <p align="right"><a href="#Top">Top</a></p>
      <p>　</td>
    <td width="50%">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  
      <img border="0" src="htmphoto/C++.jpg" width="200" height="280"></td>
  </tr>
  <tr>
    <td width="100%" colspan="2" bgcolor="#00CC66">
      <p align="center"><a name="第三代程式語言">第三代程式語言&nbsp;</a></td>
  </tr>
  <tr>
    <td width="50%">&nbsp;&nbsp;&nbsp;&nbsp; 如 C 、 PASCAL 等，這些語言標榜著結構化程式設計語言，擁有正規完善的程式語言結構，為 70 、 80 年代開發各種軟體的主要程式語言。由於這些語言的結構嚴謹（因為遵循 BNF 的關係），所以今日的許多語言大部份都是這語言的延伸版本，如 Delphi (Object PASCAL) 除了   
      (Object-Oriented ，物件導向 ) 的功能外，遵循 PASCAL 的語法； C++ 更是強調 C 為其一個子集。&nbsp;<br>  
      <br>
      ※第三代物件導向的程式語言<br>
      <br>
      &nbsp;&nbsp;&nbsp;&nbsp; 如 C++ 、 Smalltalk 等，具有物件導向的功能。我們認為 Java 亦在其中。拜 OO 觀念之賜，<br>   
      已經有越來越多的傳統語言或是新創造的程式語言引進 OO 觀念於程式語言結構中。   
      <p align="right"><a href="#Top">Top</a></p>
      <p>　</td>
    <td width="50%">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  
      <img border="0" src="htmphoto/C++.jpg" width="200" height="280"></td>
  </tr>
</table>

</body>

</html>
